(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{81:function(t,n,e){"use strict";e.r(n);var r=e(0),a=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"git-常用操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-常用操作","aria-hidden":"true"}},[t._v("#")]),t._v(" git 常用操作")]),e("h2",{attrs:{id:"拉分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 拉分支")]),e("pre",[e("code",[t._v("1. 切换到被copy的分支（master），并且从远端拉取最新版本\n  $git checkout master\n  $git pull\n\n2. 从当前分支拉copy开发分支\n  $git checkout -b dev\n  Switched to a new branch 'dev'\n\n3. 把新建的分支push到远端\n  $git push origin dev\n\n4. 拉取远端分支\n  $git pull\n\n  There is no tracking information for the current branch.\n  Please specify which branch you want to merge with.\n  See git-pull(1) for details.\n\n  git pull <remote> <branch>\n\n  If you wish to set tracking information for this branch you can do so with:\n \n  git branch --set-upstream-to=origin/<branch> dev\n\n  经过验证，当前的分支并没有和本地分支关联，根据提示进行下一步：\n\n5. 关联\n  $git branch --set-upstream-to=origin/dev\n\n6. 再次拉取 验证\n  $git pull\n")])]),e("h2",{attrs:{id:"回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回退","aria-hidden":"true"}},[t._v("#")]),t._v(" 回退")]),e("h3",{attrs:{id:"reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset","aria-hidden":"true"}},[t._v("#")]),t._v(" reset")]),e("p",[t._v("回到某个目标版本，且目标版本之后的版本记录全部删除，HEAD指向目标版本")]),e("pre",[e("code",[t._v('1、查看历史版本号\n  $git log\n\n2、选择目标版本号\n\n3、使用 "git reset --hard 目标版本号" 命令回退\n  $git reset --hard 版本号\n\n4、使用 "git push -f" 提交更改，"git push" 会报错，因为我们本地库HEAD指向的版本比远程库的要旧\n  $git push -f\n')])]),e("h3",{attrs:{id:"revert"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#revert","aria-hidden":"true"}},[t._v("#")]),t._v(" revert")]),e("p",[t._v("创建一个新的版本，且版本内容与目标版本一样，HEAD指向新版本")]),e("pre",[e("code",[t._v('1、查看历史版本号\n  $git log\n\n2、选择目标版本号\n\n3、使用 "git revert -n 目标版本号" ，可能会出现冲突，那么需要手动修改冲突的文件。 而且要git add 文件名。\n  $git revert -n 版本号\n\n4、提交\n  $git commit -m "xxxx"')])])])}],!1,null,null,null);n.default=a.exports}}]);